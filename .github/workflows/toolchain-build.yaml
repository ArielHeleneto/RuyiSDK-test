name: Build RISC-V GNU Toolchain

on:
  workflow_dispatch

jobs:
  build:
    name: Build RISC-V GNU Toolchain ${{ matrix.mod }} for ${{ matrix.target }} on ${{ matrix.mode }} Mode
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - mod: upsteam
            gcc-link: https://gcc.gnu.org/git/gcc.git
            binutils-link: https://sourceware.org/git/binutils-gdb.git
            target: rv64gc-lp64d
            mode: linux
            compiler: gcc

          - mod: plct
            gcc-link: https://github.com/ruyisdk/riscv-gcc.git
            binutils-link: https://github.com/ruyisdk/riscv-binutils.git
            target: rv64gc-lp64d
            mode: linux
            compiler: gcc

          - mod: t-head
            gcc-link: https://github.com/T-head-Semi/gcc.git
            binutils-link: https://github.com/T-head-Semi/binutils-gdb.git
            target: rv64gc-lp64d
            mode: linux
            compiler: gcc

    steps:
      - name: Remove unneeded frameworks to recover disk space
        run: |
          echo "-- Before --"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          echo "-- After --"
          df -h

      - name: Prepare Prerequisites
        run: sudo apt-get install -y tcl expect autoconf automake autotools-dev curl python3 python3-pip libmpc-dev libmpfr-dev libgmp-dev gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev libexpat-dev ninja-build git cmake libglib2.0-dev

      - name: Checkout Main Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: 'riscv-collab/riscv-gnu-toolchain'

      - name: Edit Submodule
        run: |
          git submodule set-url gcc ${{ matrix.gcc-link }}
          git submodule set-branch --default gcc
          git submodule set-url binutils ${{ matrix.binutils-link }}
          git submodule set-branch --default binutils

      - name: Get Submodule
        run: git submodule update --init --recursive

      - name: Configure Build
        run: |
          TARGET_TUPLE=($(echo ${{ matrix.target }} | tr "-" "\n"))
          BUILD_TOOLCHAIN="./configure --prefix=${{ github.workspace }}/out --with-arch=${TARGET_TUPLE[0]} --with-abi=${TARGET_TUPLE[1]}"
          if [ "${{ matrix.compiler }}" == "llvm" ]; then # build toolchain with llvm
            $BUILD_TOOLCHAIN --enable-llvm
          else
            $BUILD_TOOLCHAIN
          fi

      - name: Make
        id: build
        run: make -j $(nproc) ${{ matrix.mode }}

      - name: Upload Build Artifact
        uses: actions/upload-artifact@main
        with:
          name: riscv-toolchain-${{ matrix.mod }}-${{ matrix.target }}-${{ matrix.mode }}-${{ github.run_id }}
          path: ${{ github.workspace }}/out/
          if-no-files-found: error
      
      - name: Make Report for gcc
        if: |
          steps.build.outcome == 'success'
          && (matrix.mode == 'linux' || matrix.mode == 'newlib')
          && matrix.compiler == 'gcc'
        run: make report-gcc -j $(nproc)

      - name: Make Report for binutils
        if: |
          steps.build.outcome == 'success'
          && (matrix.mode == 'linux' || matrix.mode == 'newlib')
          && matrix.compiler == 'gcc'
        run: make report-binutils -j $(nproc)
